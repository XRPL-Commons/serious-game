name: Deploy Node Application

on:
  push:
    branches:
      - dev # or any other branch you use for production releases
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Create env file from secret
        run: |
          echo "${{ secrets.ENV_CONTENT }}" > .output/server/.env
        shell: bash

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Disable strict host key checking
        run: echo "StrictHostKeyChecking no" >> ~/.ssh/config
        shell: bash
      
      - name: Archive .output directory contents
        run: tar -czvf output.tar.gz -C .output .
        shell: bash
        
      - name: Remove existing files from target directory
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.ANSIBLE_SSH_USER_NAME }}@${{ secrets.DEV_TARGET_HOST }} 'rm -rf /var/opt/albers/*'
        shell: bash

      - name: Securely copy build directory to remote
        run: scp -i ~/.ssh/id_rsa output.tar.gz ${{ secrets.ANSIBLE_SSH_USER_NAME }}@${{ secrets.DEV_TARGET_HOST }}:/var/opt/albers
        shell: bash

      - name: Extract build directory on remote
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.ANSIBLE_SSH_USER_NAME }}@${{ secrets.DEV_TARGET_HOST }} 'tar -xzvf /var/opt/albers/output.tar.gz -C /var/opt/albers'
        shell: bash
